@page
@model IndexModel
@using Microsoft.AspNetCore.Mvc.Localization
@using TaskPlanner
@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    ViewData["Title"] = SharedLocalizer["TaskPlanner"];
}

<div class="row mb-4">
    <div class="col">
        <h1 class="display-4 text-primary">
            <i class="bi bi-check2-square me-3"></i>@SharedLocalizer["TaskPlanner"]
        </h1>
    </div>
    <div class="col-auto">
        <a asp-page="Tasks/Create" class="btn btn-primary btn-lg">
            <i class="bi bi-plus-circle me-2"></i>@SharedLocalizer["AddTask"]
        </a>
    </div>
</div>

@if (!Model.Tasks.Any())
{
    <div class="text-center py-5">
        <i class="bi bi-inbox display-1 text-muted"></i>
        <h3 class="mt-3 text-muted">@SharedLocalizer["NoTasks"]</h3>
        <a asp-page="Tasks/Create" class="btn btn-primary btn-lg mt-3">
            <i class="bi bi-plus-circle me-2"></i>@SharedLocalizer["AddTask"]
        </a>
    </div>
}
else
{
    <div class="row">
        @foreach (var task in Model.Tasks)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 shadow-sm @(task.IsCompleted ? "border-success" : task.DueDate.Date < DateTime.Today ? "border-danger" : "border-primary")">
                    <div class="card-header d-flex justify-content-between align-items-center @(task.IsCompleted ? "bg-success text-white" : task.DueDate.Date < DateTime.Today ? "bg-danger text-white" : "bg-primary text-white")">
                        <h5 class="card-title mb-0 @(task.IsCompleted ? "text-decoration-line-through" : "")">
                            @task.Title
                        </h5>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-outline-light" type="button" data-bs-toggle="dropdown">
                                <i class="bi bi-three-dots-vertical"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="dropdown-item" asp-page="Tasks/Edit" asp-route-id="@task.Id">
                                        <i class="bi bi-pencil me-2"></i>@SharedLocalizer["EditTask"]
                                    </a>
                                </li>
                                <li>
                                    <form method="post" asp-page-handler="ToggleCompletion" asp-route-id="@task.Id" style="display: inline;">
                                        <button type="submit" class="dropdown-item">
                                            <i class="bi bi-@(task.IsCompleted ? "x-circle" : "check-circle") me-2"></i>
                                            @(task.IsCompleted ? SharedLocalizer["MarkAsPending"] : SharedLocalizer["MarkAsCompleted"])
                                        </button>
                                    </form>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <form method="post" asp-page-handler="Delete" asp-route-id="@task.Id" style="display: inline;">
                                        <button type="submit" class="dropdown-item text-danger" 
                                                onclick="return confirm('@SharedLocalizer["ConfirmDelete"]')">
                                            <i class="bi bi-trash me-2"></i>@SharedLocalizer["DeleteTask"]
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text @(task.IsCompleted ? "text-decoration-line-through text-muted" : "")">
                            @(string.IsNullOrEmpty(task.Description) ? "—" : task.Description)
                        </p>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="bi bi-calendar me-1"></i>
                                @task.DueDate.ToString("MMM dd, yyyy")
                            </small>
                            <span class="badge @(task.IsCompleted ? "bg-success" : task.DueDate.Date < DateTime.Today ? "bg-danger" : task.DueDate.Date == DateTime.Today ? "bg-warning" : "bg-info")">
                                @if (task.IsCompleted)
                                {
                                    <i class="bi bi-check-circle me-1"></i>@SharedLocalizer["Completed"]
                                }
                                else if (task.DueDate.Date < DateTime.Today)
                                {
                                    <i class="bi bi-exclamation-triangle me-1"></i>@SharedLocalizer["Overdue"]
                                }
                                else if (task.DueDate.Date == DateTime.Today)
                                {
                                    <i class="bi bi-clock me-1"></i>@SharedLocalizer["DueToday"]
                                }
                                else if (task.DueDate.Date == DateTime.Today.AddDays(1))
                                {
                                    <i class="bi bi-clock me-1"></i>@SharedLocalizer["DueTomorrow"]
                                }
                                else
                                {
                                    <i class="bi bi-calendar me-1"></i>@SharedLocalizer["Pending"]
                                }
                            </span>
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        <small>
                            <i class="bi bi-clock-history me-1"></i>
                            @SharedLocalizer["CreatedAt"]: @task.CreatedAt.ToString("MMM dd, yyyy HH:mm")
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>
}
